@model IMS2.Models.DepartmentIndicatorValue

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>修改科室指标值</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DepartmentIndicatorValueId)

        <div class="form-group">
            @Html.LabelFor(model => model.Department.DepartmentName, "科室", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Department.DepartmentName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Indicator.IndicatorName, "指标", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Indicator.IndicatorName)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("showTime", "时间", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Time.GetDateTimeFormats('y')[0])
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.IsLocked == true)
                {
                    @Html.DisplayFor(model => model.Value)
                }
                else
                {
                    @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })

                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IndicatorStandardId, "标准值范围", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IndicatorStandardId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IndicatorStandardId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsLocked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsLocked)
                    @Html.ValidationMessageFor(model => model.IsLocked, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.UpdateTime)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回列表", "Index",
     new
     {
         startTime=Model.Time,
         endTime=Model.Time,
         department = Model.DepartmentId
     }
    )
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
